---
# Copyright (c) 2022,2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agent.fullname" . }}
  namespace: {{ .Release.Namespace | default "default" | quote }}
  labels:
    {{- include "agent.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/env-config: {{ include (print $.Template.BasePath "/configmap-env.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agent.serviceAccountName" . }}
      automountServiceAccountToken: {{ if .Values.automountServiceAccountToken }}true{{ else }}false{{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: default
              containerPort: {{ .Values.aas.endpoints.default.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command: 
                - wget
                - --no-check-certificate 
                - --no-verbose 
                - --tries=1 
                - --spider 
                - https://127.0.0.1:{{ .Values.aas.endpoints.default.port }}/api/v3.0/description
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command: 
                - wget
                - --no-check-certificate 
                - --no-verbose 
                - --tries=1 
                - --spider 
                - https://127.0.0.1:{{ .Values.aas.endpoints.default.port }}/api/v3.0/description
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            exec:
              command: 
                - wget
                - --no-check-certificate 
                - --no-verbose 
                - --tries=1 
                - --spider 
                - https://127.0.0.1:{{ .Values.aas.endpoints.default.port }}/api/v3.0/description
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          {{- end }}
          env:
            {{- if .Values.aas.persistence.sparql }}
            - name: PROVIDER_SPARQL_ENDPOINT
              value: {{ .Values.aas.persistence.sparql | quote }}
            {{- end }}
            {{- if .Values.aas.persistence.auth.key }}
            - name: PROVIDER_CREDENTIAL_BASIC
              value: {{ .Values.aas.persistence.auth.key | quote }}
            {{- end }}
            {{- if .Values.aas.persistence.log }}
            - name: PROVIDER_LOG_RESULTS
              value: {{ .Values.aas.persistence.log| quote }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "agent.fullname" . }}-env
            {{- if .Values.envSecretName }}
            - secretRef:
                name: {{ .Values.envSecretName | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: "configuration"
              mountPath: "/app/opentelemetry.properties"
              subPath: "opentelemetry.properties"
{{- range $domainName, $domain := .Values.domains }}
            - name: {{ $domainName }}-configuration
              mountPath: /app/resources/{{ $domainName }}
{{- end }}
            - name: tmp
              mountPath: /tmp
              readOnly: false
      volumes:
        - name: "configuration"
          configMap:
            name: {{ include "agent.fullname" . }}-configmap
            items:
                - key: "opentelemetry.properties"
                  path: "opentelemetry.properties"
{{ $scope := . }}
{{- range $domainName, $domain := .Values.domains }}
        - name: {{ $domainName }}-configuration
          configMap:
            name: {{ include "agent.fullname" $scope }}-configmap
            items:
{{- range $categoryName, $category := $domain }}
{{- range $fileName, $file := $category }}
              - key: {{ $domainName }}-{{ $categoryName }}-{{ $fileName }}
                path: {{ $categoryName }}-{{ $fileName }}
{{- end }}
{{- end }}
{{- end }}
        - name: "tmp"
          emptyDir: { }
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
